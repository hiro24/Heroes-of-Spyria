[
null,
{"id":1,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":17,"maxTurns":1,"message1":" has fallen!","message2":" is slain!","message3":"","message4":" revives!","minTurns":1,"motion":0,"overlay":0,"name":"Death","note":"State #1 will be automatically added when\nHP reaches 0.\n\n<Custom Apply Effect>\nif (target.isActor()) {\n  var ring = $dataArmors[122];\n  if (target.hasArmor(ring)) {\n    target.discardEquip(ring);\n    target.startAnimation(42);\n    var hp = Math.floor(target.mhp * 0.25);\n    target.gainHp(hp);\n    target.startDamagePopup();\n  }\n}\n\n// Get the Death Nova state's ID\nvar deathNovaId = 60;\n// Check if the target is dead and is affected by the Death Nova state\nif (target.isDead() && target.isStateAffected(deathNovaId)) {\n  // Get the poison state\n  var poisonId = 2;\n  // Get the original caster for the Death Nova state\n  var caster = target.stateOrigin(deathNovaId);\n  // Calculate the damage dealt\n  var dmg = caster.mat * 6;\n  // Get the dying unit's opponents\n  var foes = target.friendsUnit().aliveMembers();\n  // Loop through the foes\n  for (var i = 0; i < foes.length; ++i) {\n    // Get the currently looped foe\n    var foe = foes[i];\n    // Check if the foe exists\n    if (foe) {\n      // Make the foe take damage.\n      foe.gainHp(-dmg);\n      // Add the poison state to the foe.\n      foe.addState(poisonId);\n      // Show the damage popup.\n      foe.startDamagePopup();\n      // Check if the foe is dead\n      if (foe.isDead()) {\n        // If it is, collapse the foe\n        foe.performCollapse();\n      }\n      // Clear the foe's results\n      foe.clearResult();\n    }\n  }\n  // Play an animation on the dying unit\n  target.startAnimation(109);\n  // Remove the Death Nova state\n  target.removeState(deathNovaId);\n}\n\n</Custom Apply Effect>","priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":23,"dataId":9,"value":0}]},
{"id":2,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":18,"maxTurns":1,"message1":" is poisoned!","message2":" is poisoned!","message3":"","message4":" is freed of poison!","minTurns":1,"motion":0,"overlay":1,"name":"Poison","note":"<Category: Poison>","priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":7,"value":-0.1}]},
{"id":3,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":19,"maxTurns":5,"message1":" becomes blind!","message2":" is blinded!","message3":"","message4":" is no longer blinded!","minTurns":3,"motion":0,"overlay":2,"name":"Blind","note":"","priority":70,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":0,"value":-0.6}]},
{"id":4,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":20,"maxTurns":5,"message1":" cannot cast Magic!","message2":" cannot cast Magic!","message3":"","message4":"'s Magic is no longer sealed!","minTurns":3,"motion":0,"overlay":3,"name":"Silence","note":"","priority":75,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":42,"dataId":2,"value":0},{"code":42,"dataId":6,"value":0}]},
{"id":5,"autoRemovalTiming":1,"chanceByDamage":50,"iconIndex":22,"maxTurns":4,"message1":" becomes confused!","message2":" is confused!","message3":"","message4":" is no longer confused!","minTurns":2,"motion":0,"overlay":5,"name":"Confusion","note":"","priority":80,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":2,"stepsToRemove":100,"traits":[]},
{"id":6,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":24,"maxTurns":5,"message1":" falls asleep!","message2":" falls asleep!","message3":" is sleeping......","message4":" wakes up!","minTurns":3,"motion":0,"overlay":7,"name":"Sleep","note":"","priority":85,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":22,"dataId":1,"value":-1}]},
{"id":7,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":29,"maxTurns":3,"message1":" becomes paralyzed!","message2":" is paralyzed!","message3":" is unable to move!","message4":" is no longer paralyzed!","minTurns":3,"motion":0,"overlay":8,"name":"Paralysis","note":"","priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":22,"dataId":1,"value":-1}]},
{"id":8,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":29,"maxTurns":2,"message1":" loses balance!","message2":" loses balance!","message3":" hasn't regained balance......","message4":" regains balance!","minTurns":2,"motion":0,"overlay":8,"name":"Stun","note":"","priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[]},
{"id":9,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":128,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"overlay":0,"name":"Defend","note":"","priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":true,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":62,"dataId":1,"value":0}]},
{"id":10,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"overlay":0,"name":"Immortal","note":"","priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":14,"dataId":1,"value":0}]},
{"id":11,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":128,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"overlay":0,"name":"Cover","note":"","priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":true,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":62,"dataId":2,"value":0}]},
{"id":12,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":25,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"overlay":0,"name":"Provoke","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":23,"dataId":0,"value":10}]},
{"id":13,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":28,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"overlay":0,"name":"Hide","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":true,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":23,"dataId":0,"value":0.1}]},
{"id":14,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":84,"maxTurns":4,"message1":"","message2":"","message3":"","message4":"","minTurns":4,"motion":0,"overlay":0,"name":"HP Regen","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":7,"value":0.1}]},
{"id":15,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":83,"maxTurns":4,"message1":"","message2":"","message3":"","message4":"","minTurns":4,"motion":0,"overlay":0,"name":"MP Regen","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":8,"value":0.05}]},
{"id":16,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":87,"maxTurns":4,"message1":"","message2":"","message3":"","message4":"","minTurns":4,"motion":0,"overlay":0,"name":"TP Regen","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":9,"value":0.1}]},
{"id":17,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":137,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"overlay":0,"name":"Ironbody","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":true,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":23,"dataId":6,"value":0.1}]},
{"id":18,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":97,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"overlay":0,"name":"Counterattack","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":true,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":6,"value":1}]},
{"id":19,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":83,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"overlay":0,"name":"Magic Evade","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":4,"value":1}]},
{"id":20,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":128,"maxTurns":2,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"overlay":0,"name":"Magic Reflect","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":5,"value":1}]},
{"id":21,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":64,"maxTurns":5,"message1":" acquires the power of fire!","message2":" acquires the power of fire!","message3":"","message4":"","minTurns":5,"motion":0,"overlay":0,"name":"Fire Force","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":31,"dataId":3,"value":1},{"code":11,"dataId":3,"value":0.5},{"code":21,"dataId":2,"value":1.1}]},
{"id":22,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":65,"maxTurns":5,"message1":" acquires the power of ice!","message2":" acquires the power of ice!","message3":"","message4":"","minTurns":5,"motion":0,"overlay":0,"name":"Ice Force","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":31,"dataId":4,"value":1},{"code":11,"dataId":4,"value":0.5},{"code":21,"dataId":2,"value":1.1}]},
{"id":23,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":66,"maxTurns":5,"message1":" acquires the power of thunder!","message2":" acquires the power of thunder!","message3":"","message4":"","minTurns":5,"motion":0,"overlay":0,"name":"Thunder Force","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":31,"dataId":5,"value":1},{"code":11,"dataId":5,"value":0.5},{"code":21,"dataId":2,"value":1.1}]},
{"id":24,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":176,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"overlay":0,"name":"Ailment Guard","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":13,"dataId":2,"value":0},{"code":13,"dataId":3,"value":0},{"code":13,"dataId":4,"value":0},{"code":13,"dataId":5,"value":0},{"code":13,"dataId":6,"value":0},{"code":13,"dataId":7,"value":0},{"code":13,"dataId":8,"value":0}]},
{"id":25,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":57,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"overlay":0,"name":"MP Cost Down","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":23,"dataId":4,"value":0.25}]},
{"id":26,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":51,"maxTurns":2,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"overlay":0,"name":"Lunge Effect","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":3,"value":0.75}]},
{"id":27,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":35,"maxTurns":2,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"overlay":0,"name":"Shield Strike Effect","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":3,"value":1.5}]},
{"id":28,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":21,"maxTurns":1,"message1":"is filled with rage!","message2":"","message3":"","message4":"","minTurns":1,"motion":1,"overlay":4,"name":"Berserk","note":"","priority":80,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":1,"stepsToRemove":100,"traits":[{"code":21,"dataId":2,"value":2},{"code":31,"dataId":1,"value":1},{"code":22,"dataId":6,"value":1}]},
{"id":29,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":76,"maxTurns":50,"message1":"","message2":"","message3":"","message4":"","minTurns":50,"motion":0,"overlay":0,"name":"Bahamut's Fury","note":"","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":34,"dataId":0,"value":1}]},
{"id":30,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":128,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":1,"overlay":0,"name":"Crab Shell","note":"","priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":31,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"overlay":0,"name":"Lose a turn","note":"","priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[]},
{"id":32,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":54,"maxTurns":2,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"overlay":0,"name":"Slow down","note":"<CTB Speed: -80%>","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":6,"value":0.1}]},
{"id":33,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":38,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"overlay":0,"name":"Speed up","note":"<CTB Speed: +50%>","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":6,"value":2}]},
{"id":34,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":38,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"overlay":0,"name":"Speed up 1 rd","note":"<CTB Speed: +50%>","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":6,"value":2}]},
{"id":35,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":26,"maxTurns":1,"message1":" is being eaten by darkness!","message2":" is being eaten by darkness!","message3":"","message4":" is freed of the darkness!","minTurns":1,"motion":0,"overlay":9,"name":"Eternal Darkness","note":"<Category: Poison>","priority":65,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":7,"value":-0.15}]},
{"id":36,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[],"iconIndex":17,"maxTurns":5,"message1":"will die in 5 turns.","message2":"will die in 5 turns.","message3":"","message4":"","minTurns":5,"motion":0,"name":"Doom","note":"<Custom Leave Effect>\n// Get the death state for the user.\nvar deathState = user.deathStateId();\n// Check if the user is not immune to death nor resistant to it.\nif (user.stateRate(deathState) > 0.01 && !user.isStateResist(deathState)) {\n  // Play animation on the user.\n  user.startAnimation(65);\n  // Set the user's HP to 0.\n  user.setHp(0);\n  // Check if the user is dead.\n  if (user.isDead()) {\n    // Make the user collapse.\n    user.performCollapse();\n  }\n}\n</Custom Leave Effect>","overlay":9,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":37,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[],"iconIndex":28,"maxTurns":7,"message1":"","message2":"","message3":"","message4":"","minTurns":7,"motion":0,"name":"Healing Link","note":"<Custom React Effect>\nif (value < 0) {\n  var heal = Math.floor(value * 0.5);\n  origin.gainHp(-heal);\n  origin.startDamagePopup();\n  origin.clearResult();\n}\n</Custom React Effect>","overlay":6,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":38,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[],"iconIndex":26,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Death Mark","note":"<Custom Apply Effect>\ntarget._deathMarkDmg = 0;\n</Custom Apply Effect>\n\n<Custom React Effect>\nif (value > 0 && attacker === origin && this.isHpEffect()) {\n  target._deathMarkDmg += value;\n}\n</Custom React Effect>\n\n<Custom Leave Effect>\ntarget.startAnimation(77);\nvar dmg = Math.round(-0.50 * target._deathMarkDmg);\ntarget.gainHp(dmg);\ntarget._deathMarkDmg = 0;\ntarget.startDamagePopup();\ntarget.clearResult();\n</Custom Leave Effect>","overlay":9,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":39,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":69,"maxTurns":2,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"name":"Jump","note":"// Selection Control\n<Cannot Select: All>\n\n// Buffs & States Core\n<Custom Leave Effect>\n// Get the landing skill.\nvar skill = 228;\n// Get the last targeted index.\nvar target = -2;\n// Queue the forced action.\nBattleManager.queueForceAction(user, skill, target);\n</Custom Leave Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100},
{"id":40,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":76,"maxTurns":3,"message1":" draws in magical attacks!","message2":" draws in magical attacks!","message3":"","message4":"","minTurns":3,"motion":0,"name":"Runic Blade","note":"<Magical Taunt>\n<Custom React Effect>\n// Check to see if the skill is a magical skill and deals positive HP damage.\nif (this.isMagical() && this.isHpEffect() && value > 0) {\n  // Change the amount of damage received to 0.\n  value = 0;\n  // Check to see if the action is a skill.\n  if (DataManager.isSkill(this.item())) {\n  // If the action is a skill, get the MP cost of the skill.\n    var mp = user.skillMpCost(this.item());\n    // Recover the MP.\n    target.gainMp(mp);\n  }\n  // Play an animation for the Runic effect.\n  target.startAnimation(58);\n}\n</Custom React Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":41,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":54,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"overlay":0,"name":"Slimed","note":"<CTB Speed: -90%>","priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":6,"value":0.1},{"code":22,"dataId":7,"value":-0.05}]},
{"id":42,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":67,"maxTurns":1,"message1":" is being eaten by a slime!","message2":" is being eaten by a slime!","message3":"","message4":" is being eaten by a slime!","minTurns":1,"motion":0,"overlay":0,"name":"Engulfed","note":"<Category: Poison>\n// Selection Control\n<Cannot Select: All>\n\n// Buffs & States Core\n<Custom Leave Effect>\n// Get the landing skill.\nvar skill = 228;\n// Get the last targeted index.\nvar target = -2;\n// Queue the forced action.\nBattleManager.queueForceAction(user, skill, target);\n</Custom Leave Effect>","priority":65,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":22,"dataId":7,"value":-0.2}]},
{"id":43,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":29,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Change Image","note":"<Custom Apply Effect>\n// Check if the user is an enemy.\nif (user.isEnemy()) {\n  // Archive the previous enemy ID.\n  user._prevEnemyId = user._enemyId;\n  // Set the target enemy ID you want the enemy to change into.\n  var transformEnemyId = 164;\n  // Transform the user.\n  user.transform(transformEnemyId);\n}\n</Custom Apply Effect>\n\n<Custom Remove Effect>\n// Check if the user is an enemy.\nif (user.isEnemy()) {\n  // Retrieve the archived enemy ID.\n  var transformEnemyId = user._prevEnemyId;\n  // Transform the enemy back.\n  user.transform(transformEnemyId);\n  // Clear the archived data.\n  user._prevEnemyId = undefined;\n}\n</Custom Remove Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":44,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":2,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"name":"Show","note":"// Selection Control\n<Cannot Select: All>\n\n// Buffs & States Core\n<Custom Leave Effect>\n// Get the landing skill.\nvar skill = 236;\n// Get the last targeted index.\nvar target = -2;\n// Queue the forced action.\nBattleManager.queueForceAction(user, skill, target);\n</Custom Leave Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100},
{"id":45,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":82,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Minion Barrier","note":"<Custom Passive Condition>\n// The passive effect will only be true if there's more than 1 member on the field\ncondition = user.friendsUnit().aliveMembers().length > 1;\n</Custom Passive Condition>\n\n<Custom React Effect>\n// Check if this dealt HP damage\nif (this.isHpEffect() && value > 0) {\n  // Get the current group of alive allies\n  var allies = target.friendsUnit().aliveMembers();\n  // Calculate the amount of damage dealt spread across the allies\n  var dmg = Math.ceil(value / Math.max(1, allies.length - 1));\n  // Check if the number of allies is greater than 0\n  if (allies.length - 1 > 0) {\n    // If it is, reduce the direct damage to 0\n    value = 0;\n  }\n  // Loop through each of the allies\n  for (var i = 0; i < allies.length; ++i) {\n    // Get the currently looped ally\n    var ally = allies[i];\n    // Check if the ally exists and isn't the target\n    if (ally && ally !== target) {\n      // Make the ally take damage\n      ally.gainHp(-dmg);\n      // Show the damage popup\n      ally.startDamagePopup();\n      // Display an animation on that ally\n      ally.startAnimation(12);\n      // If the ally is dead\n      if (ally.isDead()) {\n        // Then make the ally collapse\n        ally.performCollapse();\n      }\n      // Clear the ally's results\n      ally.clearResult();\n    }\n  }\n}\n</Custom React Effect>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":46,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":27,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"overlay":0,"name":"Cry","note":"","priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":true,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":62,"dataId":1,"value":0}]},
{"id":47,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Boss Passive","note":"<Category: boss>","overlay":0,"priority":97,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":48,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[],"iconIndex":196,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Spirit Shell","note":"<Custom Confirm Effect>\n// Check to see if the used action affects HP, is a skill, and heals.\nif (this.isHpEffect() && this.isSkill() && value < 0) {\n  // Set the number of turns for the barrier.\n  var turns = 3;\n  // The percentage of points converted from the heal to barrier points.\n  var rate = 0.50;\n  // Create the number of barrier points granted.\n  var barrier = Math.floor(value * rate * -1);\n  // Target gains the barrier points for the forementioned turn count.\n  target.gainBarrier(barrier, turns);\n  // Reduce the barrier points from the healed amount.\n  value += barrier;\n}\n</Custom Confirm Effect>\n\n<Custom Establish Effect>\n// Get the target's results.\nvar result = target.result();\n// Check if the altered HP result is 0.\nif (result.hpDamage === 0) {\n  // Set the result's HP affected flag to false.\n  result.hpAffected = false;\n}\n</Custom Establish Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":49,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":185,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Thorns","note":"<Custom Apply Effect>\n// Sets the counter on the state to 5.\nuser.setStateCounter(stateId, 5);\n// Determine the damage of the roots being cut.\nuser._thornBindDmg = origin.mat * 2;\n// Determine the maximum cap of the damage.\nuser._thornBindDmg = Math.min(user._thornBindDmg, 1000);\n</Custom Apply Effect>\n\n<Custom Deselect Effect>\n// Get the result of the target.\nvar result = target.result();\n// Check if the target is hit, alive, the action is physical, and dealing damage.\nif (result.isHit() && !target.isDead() && this.isPhysical() && this.isDamage()) {\n  // Play animation on target.\n  target.startAnimation(12);\n  // Get the amount of damage dealt.\n  var dmg = target._thornBindDmg || 1;\n  // Make the target lose HP.\n  target.gainHp(-dmg);\n  // Disable critical hit effects.\n  target.result().critical = false;\n  // Start the damage popup.\n  target.startDamagePopup();\n  // Clear the result.\n  target.clearResult();\n  // Change the counter on the state to drop by 1.\n  target.addStateCounter(stateId, -1);\n  // Check if the counter has reached 0.\n  if (target.getStateCounter(stateId) <= 0) {\n    // Remove the state.\n    target.removeState(stateId);\n  }\n}\n</Custom Deselect Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":50,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":23,"dataId":6,"value":0.7}],"iconIndex":128,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Protect","note":"","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":51,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[{"code":11,"dataId":1,"value":1.5}],"iconIndex":34,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Focus","note":"","overlay":4,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":52,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":17,"maxTurns":1,"message1":" has fallen!","message2":" is slain!","message3":"","message4":" revives!","minTurns":1,"motion":0,"overlay":0,"name":"Death","note":"State #1 will be automatically added when\nHP reaches 0.\n\n<Custom Apply Effect>\ntarget.gainHp(-target.mhp);\ntarget.startDamagePopup();\ntarget.clearResult();\n</Custom Apply Effect>\n\n<Custom Apply Effect>\nif (target.isActor()) {\n  var ring = $dataArmors[122];\n  if (target.hasArmor(ring)) {\n    target.discardEquip(ring);\n    target.startAnimation(42);\n    var hp = Math.floor(target.mhp * 0.25);\n    target.gainHp(hp);\n    target.startDamagePopup();\n  }\n}\n</Custom Apply Effect>","priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":23,"dataId":9,"value":0}]},
{"id":53,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[{"code":11,"dataId":1,"value":1.75},{"code":11,"dataId":10,"value":1.75},{"code":21,"dataId":0,"value":1.5},{"code":14,"dataId":2,"value":1},{"code":14,"dataId":3,"value":1},{"code":14,"dataId":4,"value":1},{"code":14,"dataId":5,"value":1},{"code":14,"dataId":6,"value":1},{"code":14,"dataId":7,"value":1},{"code":14,"dataId":8,"value":1},{"code":14,"dataId":32,"value":1},{"code":14,"dataId":36,"value":1},{"code":31,"dataId":10,"value":1},{"code":32,"dataId":1,"value":0.1},{"code":21,"dataId":4,"value":2},{"code":41,"dataId":2,"value":1},{"code":43,"dataId":260,"value":1},{"code":43,"dataId":262,"value":1},{"code":43,"dataId":264,"value":1},{"code":43,"dataId":74,"value":1},{"code":43,"dataId":70,"value":1},{"code":43,"dataId":72,"value":1},{"code":43,"dataId":268,"value":1},{"code":43,"dataId":269,"value":1}],"iconIndex":1576,"maxTurns":6,"message1":"","message2":"","message3":"","message4":"","minTurns":6,"motion":0,"name":"Transform","note":"<Custom Apply Effect>\n// Check if user is an actor.\nif (user.isActor()) {\n  // Archive the previous settings.\n  user._prevCharName = user._prevCharName || user._characterName;\n  user._prevCharIndex = user._prevCharIndex || user._characterIndex;\n  user._prevFaceName = user._prevFaceName || user._faceName;\n  user._prevFaceIndex = user._prevFaceIndex || user._faceIndex;\n  user._prevBattlerName = user._prevBattlerName || user._battlerName;\n  // Check if the actor ID is 6.\n  if (user.actorId() === 6) {\n    // The filename of the character graphic without the file extension.\n    var charName = 'Demon_Madilyn';\n    // The index of the character graphic used.\n    var charIndex = 0;\n    // The filename of the face graphic without the file extension.\n    var faceName = 'Demon_Madilyn';\n    // The index of of the face graphic used.\n    var faceIndex = 0;\n    // The filename of the battler graphic without the file extension.\n    var battlerName = 'Demon_Madilyn';\n}\n  // Changes the character image to the setting applied from above.\n  user.setCharacterImage(charName, charIndex);\n  // Changes the face image to the setting applied from above.\n  user.setFaceImage(faceName, faceIndex);\n  // Changes the battler image from the setting applied from above.\n  user.setBattlerImage(battlerName);\n  // Refreshes the user's appearance.\n  user.refresh();\n}\n</Custom Apply Effect>\n\n<Custom Remove Effect>\n// Retrieve archived settings.\nvar charName = user._prevCharName;\nvar charIndex = user._prevCharIndex;\nvar faceName = user._prevFaceName;\nvar faceIndex = user._prevFaceIndex;\nvar battlerName = user._prevBattlerName;\n// Changes the character image to the archived setting.\nuser.setCharacterImage(charName, charIndex);\n// Changes the face image to the archived setting.\nuser.setFaceImage(faceName, faceIndex);\n// Changes the battler image from the archived setting.\nuser.setBattlerImage(battlerName);\n// Clear archived data.\nuser._priorityCharacterName = undefined;\nuser._priorityCharacterIndex = undefined;\nuser._prevFaceName = undefined;\nuser._prevFaceIndex = undefined;\nuser._priorityFaceName = undefined;\nuser._priorityFaceIndex = undefined;\nuser._prevFaceName = undefined;\nuser._prevFaceIndex = undefined;\nuser._priorityBattlerName = undefined;\nuser._prevBattlerName = undefined;\n// Refreshes the user's appearance.\nuser.refresh();\n</Custom Remove Effect>","overlay":0,"priority":99,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":54,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":11,"dataId":10,"value":0}],"iconIndex":161,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Gaia Shell","note":"<Custom Remove Effect>\ntarget.startAnimation(96);\n</Custom Remove Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":55,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[{"code":21,"dataId":3,"value":2},{"code":11,"dataId":3,"value":0.5},{"code":11,"dataId":4,"value":0.5},{"code":11,"dataId":5,"value":0.5},{"code":11,"dataId":6,"value":0.5},{"code":11,"dataId":7,"value":0.5},{"code":11,"dataId":8,"value":0.5},{"code":11,"dataId":9,"value":0.5},{"code":11,"dataId":10,"value":0.5}],"iconIndex":253,"maxTurns":2,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"name":"Defensive Shell","note":"","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":56,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[],"iconIndex":33,"maxTurns":2,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"name":"Life Siphon","note":"<HP Life Steal Physical: +40%>\n<HP Life Steal Magical: +40%>\n<HP Life Steal Certain: +40%>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":57,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":43,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Critical Protect","note":"<Custom Battle Effect>\n// Reset Critical Protect flag each battle.\nuser._criticalProtect = false;\n</Custom Battle Effect>\n\n<Custom Victory Effect>\n// Reset Critical Protect flag each battle.\nuser._criticalProtect = false;\n</Custom Victory Effect>\n\n<Custom Escape Effect>\n// Reset Critical Protect flag each battle.\nuser._criticalProtect = false;\n</Custom Escape Effect>\n\n<Custom Defeat Effect>\n// Reset Critical Protect flag each battle.\nuser._criticalProtect = false;\n</Custom Defeat Effect>\n\n<Custom Respond Effect>\n// This is the HP Rate the target has to be under to activate Critical Protect.\nvar crisis = 0.25;\n// Check if the player is in battle, the target is alive, and the HP rate is under the right amount.\nif ($gameParty.inBattle() && target.isAlive() && target.hpRate() <= crisis && !target._criticalProtect) {\n  // Set the critical protect flag to true.\n  target._criticalProtect = true;\n  // The number of turns the buff will last.\n  var turns = 5;\n  // Adds DEF (ID: 3) buff to target.\n  target.addBuff(3, turns);\n  // Play an animation to indicate it activated.\n  target.startAnimation(43);\n}\n</Custom Respond Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":58,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":44,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Dualcast","note":"<Custom Action Start Effect>\n// If a chained action is stored...\nif ($gameTemp._chainAction === undefined) {\n  // ...then set the action to the user's current action.\n  $gameTemp._chainAction = user.currentAction();\n} else {\n  // ...then clear the stored action.\n  $gameTemp._chainAction = undefined;\n}\n</Custom Action Start Effect>\n\n<Custom Turn End Effect>\n// If a chained action is stored...\nif ($gameTemp._chainAction) {\n  // Set the 'action' variable to the chained action.\n  var action = $gameTemp._chainAction;\n  // Check if the action exists, is a skill, and is a magical attack.\n  if (action && action.isSkill() && action.isMagical()) {\n    // Get the skill used for that action.\n    var skill = action.item();\n    // Check if the user can pay the skill cost.\n    if (user.canPaySkillCost(skill)) {\n      BattleManager.queueForceAction(user, skill.id, -2);\n    }\n  }\n}\n</Custom Turn End Effect>\n\n<Custom Remove Effect>\n// Clear the chained action effect.\n$gameTemp._chainAction = undefined;\n</Custom Remove Effect>","overlay":0,"priority":40,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":59,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":64,"dataId":1,"value":1},{"code":22,"dataId":8,"value":-0.2}],"iconIndex":846,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Avoidance","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":true,"restriction":0,"stepsToRemove":100},
{"id":60,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":118,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Pestilence Boils","note":"<Category: Bypass Death Removal>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":61,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":77,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Aura of Sacrifice","note":"<Ally Aura: 62>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":62,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":77,"maxTurns":4,"message1":"","message2":"","message3":"","message4":"","minTurns":4,"motion":0,"name":"Aura of Sacrifice","note":"<Custom React Effect>\n// Check if the action dealt HP damage\nif (this.isHpEffect() && value > 0) {\n  // Get the target's allies\n  var members = target.friendsUnit().aliveMembers();\n  // Get the Aura's Origin State ID\n  var auraOriginId = 61;\n  // Make the origin user undefined\n  var auraOriginUser = undefined;\n  // Loop through each member\n  for (var i = 0; i < members.length; ++i) {\n    // Get the currently looped member\n    var member = members[i];\n    // Check if the member exists, isn't the target, and is the aura holder\n    if (member && member !== target && member.isStateAffected(auraOriginId)) {\n      // Set the origin user to that member\n      auraOriginUser = member;\n      // Break the loop\n      break;\n    }\n  }\n  // Check if the origin user exists\n  if (auraOriginUser) {\n    // Calculate the amount of reduction\n    var reduction = Math.ceil(0.50 * value);\n    // Set the damage to the target to 0.\n    value = 0;\n    // Make the origin user take damage instead.\n    auraOriginUser.gainHp(-reduction);\n    // Display an animation on the origin user.\n    auraOriginUser.startAnimation(2);\n    // Make the origin user display a damage popup.\n    auraOriginUser.startDamagePopup();\n    // Check if the origin user is dead\n    if (auraOriginUser.isDead()) {\n      // Collapse the origin user if dead\n      auraOriginUser.performCollapse();\n    }\n    // Clear the origin user's results\n    auraOriginUser.clearResult();\n  }\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":63,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":64,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":65,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":66,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":67,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":68,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":69,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":70,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":71,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":72,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":73,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":74,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":75,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":76,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":77,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":78,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":79,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":80,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100}
]